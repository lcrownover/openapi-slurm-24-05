/*
Slurm REST API

API to access and control Slurm

API version: Slurm-24.05.3&openapi/slurmdbd&openapi/slurmctld
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_slurm_24_05

import (
	"encoding/json"
)

// checks if the SlurmdbV0041DeleteSingleQos200ResponseMetaPlugin type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SlurmdbV0041DeleteSingleQos200ResponseMetaPlugin{}

// SlurmdbV0041DeleteSingleQos200ResponseMetaPlugin struct for SlurmdbV0041DeleteSingleQos200ResponseMetaPlugin
type SlurmdbV0041DeleteSingleQos200ResponseMetaPlugin struct {
	// Slurm plugin type (if applicable)
	Type *string `json:"type,omitempty"`
	// Slurm plugin name (if applicable)
	Name *string `json:"name,omitempty"`
	// Slurm data_parser plugin
	DataParser *string `json:"data_parser,omitempty"`
	// Slurm accounting plugin
	AccountingStorage *string `json:"accounting_storage,omitempty"`
}

// NewSlurmdbV0041DeleteSingleQos200ResponseMetaPlugin instantiates a new SlurmdbV0041DeleteSingleQos200ResponseMetaPlugin object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSlurmdbV0041DeleteSingleQos200ResponseMetaPlugin() *SlurmdbV0041DeleteSingleQos200ResponseMetaPlugin {
	this := SlurmdbV0041DeleteSingleQos200ResponseMetaPlugin{}
	return &this
}

// NewSlurmdbV0041DeleteSingleQos200ResponseMetaPluginWithDefaults instantiates a new SlurmdbV0041DeleteSingleQos200ResponseMetaPlugin object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSlurmdbV0041DeleteSingleQos200ResponseMetaPluginWithDefaults() *SlurmdbV0041DeleteSingleQos200ResponseMetaPlugin {
	this := SlurmdbV0041DeleteSingleQos200ResponseMetaPlugin{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *SlurmdbV0041DeleteSingleQos200ResponseMetaPlugin) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SlurmdbV0041DeleteSingleQos200ResponseMetaPlugin) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *SlurmdbV0041DeleteSingleQos200ResponseMetaPlugin) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *SlurmdbV0041DeleteSingleQos200ResponseMetaPlugin) SetType(v string) {
	o.Type = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SlurmdbV0041DeleteSingleQos200ResponseMetaPlugin) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SlurmdbV0041DeleteSingleQos200ResponseMetaPlugin) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SlurmdbV0041DeleteSingleQos200ResponseMetaPlugin) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SlurmdbV0041DeleteSingleQos200ResponseMetaPlugin) SetName(v string) {
	o.Name = &v
}

// GetDataParser returns the DataParser field value if set, zero value otherwise.
func (o *SlurmdbV0041DeleteSingleQos200ResponseMetaPlugin) GetDataParser() string {
	if o == nil || IsNil(o.DataParser) {
		var ret string
		return ret
	}
	return *o.DataParser
}

// GetDataParserOk returns a tuple with the DataParser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SlurmdbV0041DeleteSingleQos200ResponseMetaPlugin) GetDataParserOk() (*string, bool) {
	if o == nil || IsNil(o.DataParser) {
		return nil, false
	}
	return o.DataParser, true
}

// HasDataParser returns a boolean if a field has been set.
func (o *SlurmdbV0041DeleteSingleQos200ResponseMetaPlugin) HasDataParser() bool {
	if o != nil && !IsNil(o.DataParser) {
		return true
	}

	return false
}

// SetDataParser gets a reference to the given string and assigns it to the DataParser field.
func (o *SlurmdbV0041DeleteSingleQos200ResponseMetaPlugin) SetDataParser(v string) {
	o.DataParser = &v
}

// GetAccountingStorage returns the AccountingStorage field value if set, zero value otherwise.
func (o *SlurmdbV0041DeleteSingleQos200ResponseMetaPlugin) GetAccountingStorage() string {
	if o == nil || IsNil(o.AccountingStorage) {
		var ret string
		return ret
	}
	return *o.AccountingStorage
}

// GetAccountingStorageOk returns a tuple with the AccountingStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SlurmdbV0041DeleteSingleQos200ResponseMetaPlugin) GetAccountingStorageOk() (*string, bool) {
	if o == nil || IsNil(o.AccountingStorage) {
		return nil, false
	}
	return o.AccountingStorage, true
}

// HasAccountingStorage returns a boolean if a field has been set.
func (o *SlurmdbV0041DeleteSingleQos200ResponseMetaPlugin) HasAccountingStorage() bool {
	if o != nil && !IsNil(o.AccountingStorage) {
		return true
	}

	return false
}

// SetAccountingStorage gets a reference to the given string and assigns it to the AccountingStorage field.
func (o *SlurmdbV0041DeleteSingleQos200ResponseMetaPlugin) SetAccountingStorage(v string) {
	o.AccountingStorage = &v
}

func (o SlurmdbV0041DeleteSingleQos200ResponseMetaPlugin) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SlurmdbV0041DeleteSingleQos200ResponseMetaPlugin) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.DataParser) {
		toSerialize["data_parser"] = o.DataParser
	}
	if !IsNil(o.AccountingStorage) {
		toSerialize["accounting_storage"] = o.AccountingStorage
	}
	return toSerialize, nil
}

type NullableSlurmdbV0041DeleteSingleQos200ResponseMetaPlugin struct {
	value *SlurmdbV0041DeleteSingleQos200ResponseMetaPlugin
	isSet bool
}

func (v NullableSlurmdbV0041DeleteSingleQos200ResponseMetaPlugin) Get() *SlurmdbV0041DeleteSingleQos200ResponseMetaPlugin {
	return v.value
}

func (v *NullableSlurmdbV0041DeleteSingleQos200ResponseMetaPlugin) Set(val *SlurmdbV0041DeleteSingleQos200ResponseMetaPlugin) {
	v.value = val
	v.isSet = true
}

func (v NullableSlurmdbV0041DeleteSingleQos200ResponseMetaPlugin) IsSet() bool {
	return v.isSet
}

func (v *NullableSlurmdbV0041DeleteSingleQos200ResponseMetaPlugin) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSlurmdbV0041DeleteSingleQos200ResponseMetaPlugin(val *SlurmdbV0041DeleteSingleQos200ResponseMetaPlugin) *NullableSlurmdbV0041DeleteSingleQos200ResponseMetaPlugin {
	return &NullableSlurmdbV0041DeleteSingleQos200ResponseMetaPlugin{value: val, isSet: true}
}

func (v NullableSlurmdbV0041DeleteSingleQos200ResponseMetaPlugin) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSlurmdbV0041DeleteSingleQos200ResponseMetaPlugin) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


