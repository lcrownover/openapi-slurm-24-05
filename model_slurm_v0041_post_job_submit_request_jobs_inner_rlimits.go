/*
Slurm REST API

API to access and control Slurm

API version: Slurm-24.05.3&openapi/slurmdbd&openapi/slurmctld
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SlurmV0041PostJobSubmitRequestJobsInnerRlimits type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SlurmV0041PostJobSubmitRequestJobsInnerRlimits{}

// SlurmV0041PostJobSubmitRequestJobsInnerRlimits struct for SlurmV0041PostJobSubmitRequestJobsInnerRlimits
type SlurmV0041PostJobSubmitRequestJobsInnerRlimits struct {
	Cpu *SlurmV0041PostJobSubmitRequestJobsInnerRlimitsCpu `json:"cpu,omitempty"`
	Fsize *SlurmV0041PostJobSubmitRequestJobsInnerRlimitsFsize `json:"fsize,omitempty"`
	Data *SlurmV0041PostJobSubmitRequestJobsInnerRlimitsData `json:"data,omitempty"`
	Stack *SlurmV0041PostJobSubmitRequestJobsInnerRlimitsStack `json:"stack,omitempty"`
	Core *SlurmV0041PostJobSubmitRequestJobsInnerRlimitsCore `json:"core,omitempty"`
	Rss *SlurmV0041PostJobSubmitRequestJobsInnerRlimitsRss `json:"rss,omitempty"`
	Nproc *SlurmV0041PostJobSubmitRequestJobsInnerRlimitsNproc `json:"nproc,omitempty"`
	Nofile *SlurmV0041PostJobSubmitRequestJobsInnerRlimitsNofile `json:"nofile,omitempty"`
	Memlock *SlurmV0041PostJobSubmitRequestJobsInnerRlimitsMemlock `json:"memlock,omitempty"`
	As *SlurmV0041PostJobSubmitRequestJobsInnerRlimitsAs `json:"as,omitempty"`
}

// NewSlurmV0041PostJobSubmitRequestJobsInnerRlimits instantiates a new SlurmV0041PostJobSubmitRequestJobsInnerRlimits object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSlurmV0041PostJobSubmitRequestJobsInnerRlimits() *SlurmV0041PostJobSubmitRequestJobsInnerRlimits {
	this := SlurmV0041PostJobSubmitRequestJobsInnerRlimits{}
	return &this
}

// NewSlurmV0041PostJobSubmitRequestJobsInnerRlimitsWithDefaults instantiates a new SlurmV0041PostJobSubmitRequestJobsInnerRlimits object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSlurmV0041PostJobSubmitRequestJobsInnerRlimitsWithDefaults() *SlurmV0041PostJobSubmitRequestJobsInnerRlimits {
	this := SlurmV0041PostJobSubmitRequestJobsInnerRlimits{}
	return &this
}

// GetCpu returns the Cpu field value if set, zero value otherwise.
func (o *SlurmV0041PostJobSubmitRequestJobsInnerRlimits) GetCpu() SlurmV0041PostJobSubmitRequestJobsInnerRlimitsCpu {
	if o == nil || IsNil(o.Cpu) {
		var ret SlurmV0041PostJobSubmitRequestJobsInnerRlimitsCpu
		return ret
	}
	return *o.Cpu
}

// GetCpuOk returns a tuple with the Cpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SlurmV0041PostJobSubmitRequestJobsInnerRlimits) GetCpuOk() (*SlurmV0041PostJobSubmitRequestJobsInnerRlimitsCpu, bool) {
	if o == nil || IsNil(o.Cpu) {
		return nil, false
	}
	return o.Cpu, true
}

// HasCpu returns a boolean if a field has been set.
func (o *SlurmV0041PostJobSubmitRequestJobsInnerRlimits) HasCpu() bool {
	if o != nil && !IsNil(o.Cpu) {
		return true
	}

	return false
}

// SetCpu gets a reference to the given SlurmV0041PostJobSubmitRequestJobsInnerRlimitsCpu and assigns it to the Cpu field.
func (o *SlurmV0041PostJobSubmitRequestJobsInnerRlimits) SetCpu(v SlurmV0041PostJobSubmitRequestJobsInnerRlimitsCpu) {
	o.Cpu = &v
}

// GetFsize returns the Fsize field value if set, zero value otherwise.
func (o *SlurmV0041PostJobSubmitRequestJobsInnerRlimits) GetFsize() SlurmV0041PostJobSubmitRequestJobsInnerRlimitsFsize {
	if o == nil || IsNil(o.Fsize) {
		var ret SlurmV0041PostJobSubmitRequestJobsInnerRlimitsFsize
		return ret
	}
	return *o.Fsize
}

// GetFsizeOk returns a tuple with the Fsize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SlurmV0041PostJobSubmitRequestJobsInnerRlimits) GetFsizeOk() (*SlurmV0041PostJobSubmitRequestJobsInnerRlimitsFsize, bool) {
	if o == nil || IsNil(o.Fsize) {
		return nil, false
	}
	return o.Fsize, true
}

// HasFsize returns a boolean if a field has been set.
func (o *SlurmV0041PostJobSubmitRequestJobsInnerRlimits) HasFsize() bool {
	if o != nil && !IsNil(o.Fsize) {
		return true
	}

	return false
}

// SetFsize gets a reference to the given SlurmV0041PostJobSubmitRequestJobsInnerRlimitsFsize and assigns it to the Fsize field.
func (o *SlurmV0041PostJobSubmitRequestJobsInnerRlimits) SetFsize(v SlurmV0041PostJobSubmitRequestJobsInnerRlimitsFsize) {
	o.Fsize = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *SlurmV0041PostJobSubmitRequestJobsInnerRlimits) GetData() SlurmV0041PostJobSubmitRequestJobsInnerRlimitsData {
	if o == nil || IsNil(o.Data) {
		var ret SlurmV0041PostJobSubmitRequestJobsInnerRlimitsData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SlurmV0041PostJobSubmitRequestJobsInnerRlimits) GetDataOk() (*SlurmV0041PostJobSubmitRequestJobsInnerRlimitsData, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *SlurmV0041PostJobSubmitRequestJobsInnerRlimits) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given SlurmV0041PostJobSubmitRequestJobsInnerRlimitsData and assigns it to the Data field.
func (o *SlurmV0041PostJobSubmitRequestJobsInnerRlimits) SetData(v SlurmV0041PostJobSubmitRequestJobsInnerRlimitsData) {
	o.Data = &v
}

// GetStack returns the Stack field value if set, zero value otherwise.
func (o *SlurmV0041PostJobSubmitRequestJobsInnerRlimits) GetStack() SlurmV0041PostJobSubmitRequestJobsInnerRlimitsStack {
	if o == nil || IsNil(o.Stack) {
		var ret SlurmV0041PostJobSubmitRequestJobsInnerRlimitsStack
		return ret
	}
	return *o.Stack
}

// GetStackOk returns a tuple with the Stack field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SlurmV0041PostJobSubmitRequestJobsInnerRlimits) GetStackOk() (*SlurmV0041PostJobSubmitRequestJobsInnerRlimitsStack, bool) {
	if o == nil || IsNil(o.Stack) {
		return nil, false
	}
	return o.Stack, true
}

// HasStack returns a boolean if a field has been set.
func (o *SlurmV0041PostJobSubmitRequestJobsInnerRlimits) HasStack() bool {
	if o != nil && !IsNil(o.Stack) {
		return true
	}

	return false
}

// SetStack gets a reference to the given SlurmV0041PostJobSubmitRequestJobsInnerRlimitsStack and assigns it to the Stack field.
func (o *SlurmV0041PostJobSubmitRequestJobsInnerRlimits) SetStack(v SlurmV0041PostJobSubmitRequestJobsInnerRlimitsStack) {
	o.Stack = &v
}

// GetCore returns the Core field value if set, zero value otherwise.
func (o *SlurmV0041PostJobSubmitRequestJobsInnerRlimits) GetCore() SlurmV0041PostJobSubmitRequestJobsInnerRlimitsCore {
	if o == nil || IsNil(o.Core) {
		var ret SlurmV0041PostJobSubmitRequestJobsInnerRlimitsCore
		return ret
	}
	return *o.Core
}

// GetCoreOk returns a tuple with the Core field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SlurmV0041PostJobSubmitRequestJobsInnerRlimits) GetCoreOk() (*SlurmV0041PostJobSubmitRequestJobsInnerRlimitsCore, bool) {
	if o == nil || IsNil(o.Core) {
		return nil, false
	}
	return o.Core, true
}

// HasCore returns a boolean if a field has been set.
func (o *SlurmV0041PostJobSubmitRequestJobsInnerRlimits) HasCore() bool {
	if o != nil && !IsNil(o.Core) {
		return true
	}

	return false
}

// SetCore gets a reference to the given SlurmV0041PostJobSubmitRequestJobsInnerRlimitsCore and assigns it to the Core field.
func (o *SlurmV0041PostJobSubmitRequestJobsInnerRlimits) SetCore(v SlurmV0041PostJobSubmitRequestJobsInnerRlimitsCore) {
	o.Core = &v
}

// GetRss returns the Rss field value if set, zero value otherwise.
func (o *SlurmV0041PostJobSubmitRequestJobsInnerRlimits) GetRss() SlurmV0041PostJobSubmitRequestJobsInnerRlimitsRss {
	if o == nil || IsNil(o.Rss) {
		var ret SlurmV0041PostJobSubmitRequestJobsInnerRlimitsRss
		return ret
	}
	return *o.Rss
}

// GetRssOk returns a tuple with the Rss field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SlurmV0041PostJobSubmitRequestJobsInnerRlimits) GetRssOk() (*SlurmV0041PostJobSubmitRequestJobsInnerRlimitsRss, bool) {
	if o == nil || IsNil(o.Rss) {
		return nil, false
	}
	return o.Rss, true
}

// HasRss returns a boolean if a field has been set.
func (o *SlurmV0041PostJobSubmitRequestJobsInnerRlimits) HasRss() bool {
	if o != nil && !IsNil(o.Rss) {
		return true
	}

	return false
}

// SetRss gets a reference to the given SlurmV0041PostJobSubmitRequestJobsInnerRlimitsRss and assigns it to the Rss field.
func (o *SlurmV0041PostJobSubmitRequestJobsInnerRlimits) SetRss(v SlurmV0041PostJobSubmitRequestJobsInnerRlimitsRss) {
	o.Rss = &v
}

// GetNproc returns the Nproc field value if set, zero value otherwise.
func (o *SlurmV0041PostJobSubmitRequestJobsInnerRlimits) GetNproc() SlurmV0041PostJobSubmitRequestJobsInnerRlimitsNproc {
	if o == nil || IsNil(o.Nproc) {
		var ret SlurmV0041PostJobSubmitRequestJobsInnerRlimitsNproc
		return ret
	}
	return *o.Nproc
}

// GetNprocOk returns a tuple with the Nproc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SlurmV0041PostJobSubmitRequestJobsInnerRlimits) GetNprocOk() (*SlurmV0041PostJobSubmitRequestJobsInnerRlimitsNproc, bool) {
	if o == nil || IsNil(o.Nproc) {
		return nil, false
	}
	return o.Nproc, true
}

// HasNproc returns a boolean if a field has been set.
func (o *SlurmV0041PostJobSubmitRequestJobsInnerRlimits) HasNproc() bool {
	if o != nil && !IsNil(o.Nproc) {
		return true
	}

	return false
}

// SetNproc gets a reference to the given SlurmV0041PostJobSubmitRequestJobsInnerRlimitsNproc and assigns it to the Nproc field.
func (o *SlurmV0041PostJobSubmitRequestJobsInnerRlimits) SetNproc(v SlurmV0041PostJobSubmitRequestJobsInnerRlimitsNproc) {
	o.Nproc = &v
}

// GetNofile returns the Nofile field value if set, zero value otherwise.
func (o *SlurmV0041PostJobSubmitRequestJobsInnerRlimits) GetNofile() SlurmV0041PostJobSubmitRequestJobsInnerRlimitsNofile {
	if o == nil || IsNil(o.Nofile) {
		var ret SlurmV0041PostJobSubmitRequestJobsInnerRlimitsNofile
		return ret
	}
	return *o.Nofile
}

// GetNofileOk returns a tuple with the Nofile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SlurmV0041PostJobSubmitRequestJobsInnerRlimits) GetNofileOk() (*SlurmV0041PostJobSubmitRequestJobsInnerRlimitsNofile, bool) {
	if o == nil || IsNil(o.Nofile) {
		return nil, false
	}
	return o.Nofile, true
}

// HasNofile returns a boolean if a field has been set.
func (o *SlurmV0041PostJobSubmitRequestJobsInnerRlimits) HasNofile() bool {
	if o != nil && !IsNil(o.Nofile) {
		return true
	}

	return false
}

// SetNofile gets a reference to the given SlurmV0041PostJobSubmitRequestJobsInnerRlimitsNofile and assigns it to the Nofile field.
func (o *SlurmV0041PostJobSubmitRequestJobsInnerRlimits) SetNofile(v SlurmV0041PostJobSubmitRequestJobsInnerRlimitsNofile) {
	o.Nofile = &v
}

// GetMemlock returns the Memlock field value if set, zero value otherwise.
func (o *SlurmV0041PostJobSubmitRequestJobsInnerRlimits) GetMemlock() SlurmV0041PostJobSubmitRequestJobsInnerRlimitsMemlock {
	if o == nil || IsNil(o.Memlock) {
		var ret SlurmV0041PostJobSubmitRequestJobsInnerRlimitsMemlock
		return ret
	}
	return *o.Memlock
}

// GetMemlockOk returns a tuple with the Memlock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SlurmV0041PostJobSubmitRequestJobsInnerRlimits) GetMemlockOk() (*SlurmV0041PostJobSubmitRequestJobsInnerRlimitsMemlock, bool) {
	if o == nil || IsNil(o.Memlock) {
		return nil, false
	}
	return o.Memlock, true
}

// HasMemlock returns a boolean if a field has been set.
func (o *SlurmV0041PostJobSubmitRequestJobsInnerRlimits) HasMemlock() bool {
	if o != nil && !IsNil(o.Memlock) {
		return true
	}

	return false
}

// SetMemlock gets a reference to the given SlurmV0041PostJobSubmitRequestJobsInnerRlimitsMemlock and assigns it to the Memlock field.
func (o *SlurmV0041PostJobSubmitRequestJobsInnerRlimits) SetMemlock(v SlurmV0041PostJobSubmitRequestJobsInnerRlimitsMemlock) {
	o.Memlock = &v
}

// GetAs returns the As field value if set, zero value otherwise.
func (o *SlurmV0041PostJobSubmitRequestJobsInnerRlimits) GetAs() SlurmV0041PostJobSubmitRequestJobsInnerRlimitsAs {
	if o == nil || IsNil(o.As) {
		var ret SlurmV0041PostJobSubmitRequestJobsInnerRlimitsAs
		return ret
	}
	return *o.As
}

// GetAsOk returns a tuple with the As field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SlurmV0041PostJobSubmitRequestJobsInnerRlimits) GetAsOk() (*SlurmV0041PostJobSubmitRequestJobsInnerRlimitsAs, bool) {
	if o == nil || IsNil(o.As) {
		return nil, false
	}
	return o.As, true
}

// HasAs returns a boolean if a field has been set.
func (o *SlurmV0041PostJobSubmitRequestJobsInnerRlimits) HasAs() bool {
	if o != nil && !IsNil(o.As) {
		return true
	}

	return false
}

// SetAs gets a reference to the given SlurmV0041PostJobSubmitRequestJobsInnerRlimitsAs and assigns it to the As field.
func (o *SlurmV0041PostJobSubmitRequestJobsInnerRlimits) SetAs(v SlurmV0041PostJobSubmitRequestJobsInnerRlimitsAs) {
	o.As = &v
}

func (o SlurmV0041PostJobSubmitRequestJobsInnerRlimits) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SlurmV0041PostJobSubmitRequestJobsInnerRlimits) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cpu) {
		toSerialize["cpu"] = o.Cpu
	}
	if !IsNil(o.Fsize) {
		toSerialize["fsize"] = o.Fsize
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.Stack) {
		toSerialize["stack"] = o.Stack
	}
	if !IsNil(o.Core) {
		toSerialize["core"] = o.Core
	}
	if !IsNil(o.Rss) {
		toSerialize["rss"] = o.Rss
	}
	if !IsNil(o.Nproc) {
		toSerialize["nproc"] = o.Nproc
	}
	if !IsNil(o.Nofile) {
		toSerialize["nofile"] = o.Nofile
	}
	if !IsNil(o.Memlock) {
		toSerialize["memlock"] = o.Memlock
	}
	if !IsNil(o.As) {
		toSerialize["as"] = o.As
	}
	return toSerialize, nil
}

type NullableSlurmV0041PostJobSubmitRequestJobsInnerRlimits struct {
	value *SlurmV0041PostJobSubmitRequestJobsInnerRlimits
	isSet bool
}

func (v NullableSlurmV0041PostJobSubmitRequestJobsInnerRlimits) Get() *SlurmV0041PostJobSubmitRequestJobsInnerRlimits {
	return v.value
}

func (v *NullableSlurmV0041PostJobSubmitRequestJobsInnerRlimits) Set(val *SlurmV0041PostJobSubmitRequestJobsInnerRlimits) {
	v.value = val
	v.isSet = true
}

func (v NullableSlurmV0041PostJobSubmitRequestJobsInnerRlimits) IsSet() bool {
	return v.isSet
}

func (v *NullableSlurmV0041PostJobSubmitRequestJobsInnerRlimits) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSlurmV0041PostJobSubmitRequestJobsInnerRlimits(val *SlurmV0041PostJobSubmitRequestJobsInnerRlimits) *NullableSlurmV0041PostJobSubmitRequestJobsInnerRlimits {
	return &NullableSlurmV0041PostJobSubmitRequestJobsInnerRlimits{value: val, isSet: true}
}

func (v NullableSlurmV0041PostJobSubmitRequestJobsInnerRlimits) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSlurmV0041PostJobSubmitRequestJobsInnerRlimits) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


