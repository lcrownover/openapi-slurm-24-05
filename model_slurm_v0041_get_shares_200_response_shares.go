/*
Slurm REST API

API to access and control Slurm

API version: Slurm-24.05.3&openapi/slurmdbd&openapi/slurmctld
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_slurm_24_05

import (
	"encoding/json"
)

// checks if the SlurmV0041GetShares200ResponseShares type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SlurmV0041GetShares200ResponseShares{}

// SlurmV0041GetShares200ResponseShares fairshare info
type SlurmV0041GetShares200ResponseShares struct {
	// Association shares
	Shares []SlurmV0041GetShares200ResponseSharesSharesInner `json:"shares,omitempty"`
	// Total number of shares
	TotalShares *int64 `json:"total_shares,omitempty"`
}

// NewSlurmV0041GetShares200ResponseShares instantiates a new SlurmV0041GetShares200ResponseShares object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSlurmV0041GetShares200ResponseShares() *SlurmV0041GetShares200ResponseShares {
	this := SlurmV0041GetShares200ResponseShares{}
	return &this
}

// NewSlurmV0041GetShares200ResponseSharesWithDefaults instantiates a new SlurmV0041GetShares200ResponseShares object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSlurmV0041GetShares200ResponseSharesWithDefaults() *SlurmV0041GetShares200ResponseShares {
	this := SlurmV0041GetShares200ResponseShares{}
	return &this
}

// GetShares returns the Shares field value if set, zero value otherwise.
func (o *SlurmV0041GetShares200ResponseShares) GetShares() []SlurmV0041GetShares200ResponseSharesSharesInner {
	if o == nil || IsNil(o.Shares) {
		var ret []SlurmV0041GetShares200ResponseSharesSharesInner
		return ret
	}
	return o.Shares
}

// GetSharesOk returns a tuple with the Shares field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SlurmV0041GetShares200ResponseShares) GetSharesOk() ([]SlurmV0041GetShares200ResponseSharesSharesInner, bool) {
	if o == nil || IsNil(o.Shares) {
		return nil, false
	}
	return o.Shares, true
}

// HasShares returns a boolean if a field has been set.
func (o *SlurmV0041GetShares200ResponseShares) HasShares() bool {
	if o != nil && !IsNil(o.Shares) {
		return true
	}

	return false
}

// SetShares gets a reference to the given []SlurmV0041GetShares200ResponseSharesSharesInner and assigns it to the Shares field.
func (o *SlurmV0041GetShares200ResponseShares) SetShares(v []SlurmV0041GetShares200ResponseSharesSharesInner) {
	o.Shares = v
}

// GetTotalShares returns the TotalShares field value if set, zero value otherwise.
func (o *SlurmV0041GetShares200ResponseShares) GetTotalShares() int64 {
	if o == nil || IsNil(o.TotalShares) {
		var ret int64
		return ret
	}
	return *o.TotalShares
}

// GetTotalSharesOk returns a tuple with the TotalShares field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SlurmV0041GetShares200ResponseShares) GetTotalSharesOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalShares) {
		return nil, false
	}
	return o.TotalShares, true
}

// HasTotalShares returns a boolean if a field has been set.
func (o *SlurmV0041GetShares200ResponseShares) HasTotalShares() bool {
	if o != nil && !IsNil(o.TotalShares) {
		return true
	}

	return false
}

// SetTotalShares gets a reference to the given int64 and assigns it to the TotalShares field.
func (o *SlurmV0041GetShares200ResponseShares) SetTotalShares(v int64) {
	o.TotalShares = &v
}

func (o SlurmV0041GetShares200ResponseShares) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SlurmV0041GetShares200ResponseShares) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Shares) {
		toSerialize["shares"] = o.Shares
	}
	if !IsNil(o.TotalShares) {
		toSerialize["total_shares"] = o.TotalShares
	}
	return toSerialize, nil
}

type NullableSlurmV0041GetShares200ResponseShares struct {
	value *SlurmV0041GetShares200ResponseShares
	isSet bool
}

func (v NullableSlurmV0041GetShares200ResponseShares) Get() *SlurmV0041GetShares200ResponseShares {
	return v.value
}

func (v *NullableSlurmV0041GetShares200ResponseShares) Set(val *SlurmV0041GetShares200ResponseShares) {
	v.value = val
	v.isSet = true
}

func (v NullableSlurmV0041GetShares200ResponseShares) IsSet() bool {
	return v.isSet
}

func (v *NullableSlurmV0041GetShares200ResponseShares) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSlurmV0041GetShares200ResponseShares(val *SlurmV0041GetShares200ResponseShares) *NullableSlurmV0041GetShares200ResponseShares {
	return &NullableSlurmV0041GetShares200ResponseShares{value: val, isSet: true}
}

func (v NullableSlurmV0041GetShares200ResponseShares) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSlurmV0041GetShares200ResponseShares) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


